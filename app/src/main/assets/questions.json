[
  {
    "id": 1,
    "title": "将()属性设置为false，防止adbbackup导出数据",
    "multi": false,
    "choose": [
      {
        "title": "android:allowBackup",
        "result": true
      },
      {
        "title": "android:debuggable"
      },
      {
        "title": "android:permission"
      },
      {
        "title": "android:theme"
      }
    ]
  },
  {
    "id": 2,
    "title": "定义某个style的以下行为哪些不符合规范()",
    "multi": true,
    "choose": [
      {
        "title": "可以任意给style资源命名",
        "result": true
      },
      {
        "title": "当希望在某个BaseTheme的基础上扩展定义某个Activity的theme时，定义的style如下：<stylename=\"BaseTheme.ThisActivityTheme\">…</style>"
      },
      {
        "title": "live模块的style文件名称为：customstyle.xml",
        "result": true
      },
      {
        "title": "所有的style都是独立的，不存在继承关系",
        "result": true
      }
    ]
  },
  {
    "id": 3,
    "title": "以下关于Activity#onDestroy方法的描述错误的是()",
    "multi": true,
    "choose": [
      {
        "title": "可以在该方法中处理保存应用数据的相关逻辑",
        "result": true
      },
      {
        "title": "Activty子类重载该方法时，必须调用super.onDestroy()"
      },
      {
        "title": "应该在该方法注销之前注册的BroadcastReceiver"
      },
      {
        "title": "在该方法中释放Activity相关线程资源",
        "result": true
      }
    ]
  },
  {
    "id": 4,
    "title": "以下关于使用DialogFragment替换Dialog的说法正确的是()",
    "multi": true,
    "choose": [
      {
        "title": "DiaolgoFragment可以借助FragmentManager自动管理对话框状态，比如屏幕旋转后Dialog状态的恢复",
        "result": true
      },
      {
        "title": "DialogFragment可A便利的使用自定义Dialog和系统Dialog",
        "result": true
      },
      {
        "title": "甶于系统Dialog是独立于Activity的系统，管理状态复杂，代码量比较多"
      },
      {
        "title": "DialogFragment便于代码解耦合合、复用",
        "result": true
      },
      {
        "title": "系统Dialog在屏幕旋转的时候可能会导致内存泄漏",
        "result": true
      }
    ]
  },
  {
    "id": 5,
    "title": "以下说法正确的是。",
    "multi": true,
    "choose": [
      {
        "title": "应用发布前确保android:debuggable属性设置为false",
        "result": true
      },
      {
        "title": "不要把敏感信息打印到log中",
        "result": true
      },
      {
        "title": "不要广播敏感信息，只能在本应使用LocalBroadcast，避免被别的应用收到，或者setPackage做限制",
        "result": true
      },
      {
        "title": "数据存储在Sqlite或者轻量级存储需要对数据进行加密，取出来的时候进行解密",
        "result": true
      }
    ]
  },
  {
    "id": 6,
    "title": "在BroadcastReceiver中进行耗时操作，下列说法正确的是()",
    "multi": false,
    "choose": [
      {
        "title": "在onReceive()中可以执行耗时操作"
      },
      {
        "title": "在onBind()方法中可以通过newthread()执行耗时操作"
      },
      {
        "title": "在onBind()方法中，可以通过调用IntentService去执行耗时操作",
        "result": true
      },
      {
        "title": "在onBind()方法中，可以通过创建ThreadPool执行耗时操作"
      }
    ]
  },
  {
    "id": 7,
    "title": "关于组件间数据传递的说法错误的是()",
    "multi": false,
    "choose": [
      {
        "title": "使用Intent传递数据"
      },
      {
        "title": "使用Application缓存当前登录的用户信息",
        "result": true
      },
      {
        "title": "使用ContentProvider实现数据共享"
      },
      {
        "title": "使用SharedPreferences实现数据共享"
      }
    ]
  },
  {
    "id": 8,
    "title": "减小图片占用内存的方法有()",
    "multi": true,
    "choose": [
      {
        "title": "根据实际需要对图片进行缩放",
        "result": true
      },
      {
        "title": "用RGB_565代替RGB_888",
        "result": true
      },
      {
        "title": "本地png图片预先用TinyPNG压缩",
        "result": true
      },
      {
        "title": "使用inBitmap重复利用内存空间",
        "result": true
      }
    ]
  },
  {
    "id": 9,
    "title": "加载Bitmap图片时，inBitmap选项有什么作用？",
    "multi": false,
    "choose": [
      {
        "title": "重复利用内存空间",
        "result": true
      },
      {
        "title": "图片压缩"
      },
      {
        "title": "限制清晰度"
      },
      {
        "title": "设置位图信息"
      }
    ]
  },
  {
    "id": 10,
    "title": "以下符合规范的操作有()",
    "multi": true,
    "choose": [
      {
        "title": "使用dp作为View的小单位",
        "result": true
      },
      {
        "title": "为子View和父View设置同样背景色"
      },
      {
        "title": "禁止在非UI主线程操作View",
        "result": true
      },
      {
        "title": "源文件统一采用UTF-8编码",
        "result": true
      }
    ]
  },
  {
    "id": 11,
    "title": "Android5.0以后安全性要求较高的应用应该使用()禁止录屏",
    "multi": false,
    "choose": [
      {
        "title": "window#setFlag(LayoutParam.FLAG_BLUR_BEHIND)"
      },
      {
        "title": "window#setFlag(LayoutParam.FLAG_SECURE)",
        "result": true
      },
      {
        "title": "window#setFlag(LayoutParam.FLAG_SPLIT_TOUCH)"
      },
      {
        "title": "window#setFlag(LayoutParam.FLAG_KEEP_SCREEN_ON)"
      }
    ]
  },
  {
    "id": 12,
    "title": "不建议使用AnimationDrawable的原因是()?",
    "multi": false,
    "choose": [
      {
        "title": "动画不流畅"
      },
      {
        "title": "内存消耗过大",
        "result": true
      },
      {
        "title": "不兼容问题"
      }
    ]
  },
  {
    "id": 13,
    "title": "以下关于android.app.Service的说法正确的是()",
    "multi": true,
    "choose": [
      {
        "title": "如果Service需要处理耗时操作，可以使用IntentService实现",
        "result": true
      },
      {
        "title": "如果Service需要处理耗时操作可以通过AsyncTask实现",
        "result": true
      },
      {
        "title": "Service#onStartCommand()方法中可以进行网络请求操作"
      },
      {
        "title": "Service#onStartCommand()是在MainThread执行的，因此不能执行耗时操作",
        "result": true
      }
    ]
  },
  {
    "id": 14,
    "title": "禁止使用常量初始化矢量参数构建IvParameterSpec，建议IV通过()产生",
    "multi": false,
    "choose": [
      {
        "title": "常量初始化"
      },
      {
        "title": "函数定义"
      },
      {
        "title": "随机方式",
        "result": true
      },
      {
        "title": "写死变量"
      }
    ]
  },
  {
    "id": 15,
    "title": "以下说法正确的有哪些?",
    "multi": true,
    "choose": [
      {
        "title": "源文件推荐统一采用UTF-8的形式进行编码",
        "result": true
      },
      {
        "title": "可多次为子View和父View设置同样背景"
      },
      {
        "title": "灵活使用布局，推荐merge、ViewStub来优化布局，尽可能多的减少UI布局层级",
        "result": true
      },
      {
        "title": "不能在Activity没有完全显示时显示PopupWindow和Dialog",
        "result": true
      }
    ]
  },
  {
    "id": 16,
    "title": "关于嵌套Fragment的说法正确的有()",
    "multi": true,
    "choose": [
      {
        "title": "为了避免复杂性和潜在bug,尽量不要使用嵌套Fragment",
        "result": true
      },
      {
        "title": "可以在xm文件中定义嵌套Fragment"
      },
      {
        "title": "使用嵌套Fragment时应注意区分Activity的FragmentManager和宿主Fragment的FragmentManager,否则可能导致错误",
        "result": true
      },
      {
        "title": "嵌套Fragment的onActⅳityResult方法可能不会被正常调用",
        "result": true
      }
    ]
  },
  {
    "id": 17,
    "title": "以下关于Activity#onPause()方法中可以进行的操作是()。",
    "multi": false,
    "choose": [
      {
        "title": "注销广播unregisterReceiver()",
        "result": true
      },
      {
        "title": "发送同步网络请求"
      },
      {
        "title": "通过FragmentTransaction的方式添加Fragment"
      },
      {
        "title": "进行磁盘IO操作"
      }
    ]
  },
  {
    "id": 18,
    "title": "以下关于Activty页面布局错误的做法是()",
    "multi": false,
    "choose": [
      {
        "title": "只要实现UI功能,不必关心ViewHirerachy",
        "result": true
      },
      {
        "title": "尽量少使用ViewGroup嵌套"
      },
      {
        "title": "减少LinearLayout的嵌套层级"
      },
      {
        "title": "同样UI,使用RelativeLayou替代LinearLayout以减少view层级"
      }
    ]
  },
  {
    "id": 19,
    "title": "在Listview中加载图片时,需要注意()",
    "multi": true,
    "choose": [
      {
        "title": "做好内存控制,避免内布溢出",
        "result": true
      },
      {
        "title": "做好缓存以及淘汰机制,避免重复创建",
        "result": true
      },
      {
        "title": "为了UI效率,应该把展示过的图片都缓存起来",
        "result": true
      },
      {
        "title": "当图片不可见后,应该立即释放,避免内存占用过高",
        "result": true
      }
    ]
  },
  {
    "id": 20,
    "title": "在主线程加载大图片会导致()",
    "multi": false,
    "choose": [
      {
        "title": "内存溢出"
      },
      {
        "title": "UI卡顿",
        "result": true
      },
      {
        "title": "崩溃"
      },
      {
        "title": "图片错乱"
      }
    ]
  },
  {
    "id": 21,
    "title": "关于ViewHolder的说法错误的是()",
    "multi": false,
    "choose": [
      {
        "title": "使用ViewHolder主要是为了避免多次创建vew,降低内存占用并提升UI流畅度"
      },
      {
        "title": "ViewHolder仅设置需要更新的属性即可",
        "result": true
      },
      {
        "title": "ViewHolder不仅适用于ListView的场景"
      },
      {
        "title": "getView中需要更新ViewHolder的所有属性"
      }
    ]
  },
  {
    "id": 22,
    "title": "关于RGB_565和RGB_888,以下说法正确的是()",
    "multi": true,
    "choose": [
      {
        "title": "RGB_555比RGB_888清晰"
      },
      {
        "title": "RGB_888比RGB_565清晰",
        "result": true
      },
      {
        "title": "RGB_565占用内存更少",
        "result": true
      },
      {
        "title": "若视觉效果相似,应尽可能使用RGB_565",
        "result": true
      }
    ]
  },
  {
    "id": 23,
    "title": "加密算法:使用不安全的Hash算法加密信息,存在被破解的风险,建议使用()等安全性更高的Hash算法",
    "multi": false,
    "choose": [
      {
        "title": "SHA-256",
        "result": true
      },
      {
        "title": "MD5"
      },
      {
        "title": "SHA-1"
      },
      {
        "title": "SHA-128"
      }
    ]
  },
  {
    "id": 24,
    "title": "以下哪些方式可以避免引发全局layout刷新?",
    "multi": true,
    "choose": [
      {
        "title": "设置固定的View大小的宽高",
        "result": true
      },
      {
        "title": "调用View的layout方法修改位置",
        "result": true
      },
      {
        "title": "通过修改Canvas位置并且调用invalidate(int l,int t，int r，int b）等方式限定刷新区域",
        "result": true
      },
      {
        "title": "通过设置一个是否允许requestLayout的变量，然后重写控件的requestlayout、onSizeChanged方法，判断控件的大小没有改变的情况下，当进入requestLayout的时候，直接返回而不调用super的requestLayout方法",
        "result": true
      }
    ]
  },
  {
    "id": 25,
    "title": "当添加Fragment时，以下做法正确的是()",
    "multi": true,
    "choose": [
      {
        "title": "避免使用FragmentTransaction#commitAllowingstateLoss()",
        "result": true
      },
      {
        "title": "在Activity#onSaveInstancestate()方法之后调用FragmentTransaction#commit()没有问题"
      },
      {
        "title": "使用FragmentTransaction#commitllowingstateLoss()会导致用户UI状态丢失，降低用户体验",
        "result": true
      },
      {
        "title": "FragmentTransaction#commit()调用时机不对可能会导致java.lang.lllegaIStateException",
        "result": true
      }
    ]
  },
  {
    "id": 26,
    "title": "在Activity进行较大数据量的通信时，以下选项中建议使用的有()",
    "multi": true,
    "choose": [
      {
        "title": "Intent+Serializable"
      },
      {
        "title": "Intent+Parcelable"
      },
      {
        "title": "EventBus",
        "result": true
      },
      {
        "title": "文件",
        "result": true
      }
    ]
  },
  {
    "id": 27,
    "title": "以下关于文件与数据库说法正确的是（）",
    "multi": true,
    "choose": [
      {
        "title": "当使用外部存储时，必须检查外部存储的可用性。",
        "result": true
      },
      {
        "title": "任何时候不要硬编码文件路径，请使用Android文件系统API访问。",
        "result": true
      },
      {
        "title": "数据库Cursor必须确保使用完后关闭，以免内存泄漏。",
        "result": true
      },
      {
        "title": "多线程操作写入数据库时，需要使用事务，以免出现同步问题。",
        "result": true
      }
    ]
  },
  {
    "id": 28,
    "title": "关于动画，以下说法正确的是（）",
    "multi": true,
    "choose": [
      {
        "title": "Activity不可见时,应该及时关闭动画。",
        "result": true
      },
      {
        "title": "在动画结束的回调中，应该判断需要用到的资源是否已经被释放了",
        "result": true
      },
      {
        "title": "Animation.AnimationListener#onAnimationEnd()回调可以准确可靠地告知动画结束时机"
      },
      {
        "title": "应该根据设备情况选择性开启复杂动画",
        "result": true
      }
    ]
  },
  {
    "id": 29,
    "title": "为便于随Activity生命周期管理对话框/弹出浮层的生命周期，推荐使用以下哪种view?",
    "multi": false,
    "choose": [
      {
        "title": "DialogFragment",
        "result": true
      },
      {
        "title": "AlertDialog"
      },
      {
        "title": "Dialog"
      },
      {
        "title": "PopupWindow"
      }
    ]
  },
  {
    "id": 30,
    "title": "关于局部频繁刷新View，如何避免全局重新布局的做法正确的是（）",
    "multi": true,
    "choose": [
      {
        "title": "需刷新的View严格指明宽高，比如倒计时组件",
        "result": true
      },
      {
        "title": "调用View#layout()方法更新位置，比如弹幕",
        "result": true
      },
      {
        "title": "使用View#invalidate(int l，int t，int r，int b）强制刷新部分区域",
        "result": true
      },
      {
        "title": "在某些局部刷新的场景下，强制关闭自定义View#requestLayout功能",
        "result": true
      }
    ]
  },
  {
    "id": 31,
    "title": "在应用内广播敏感信息时，下面说法正确的是（）",
    "multi": true,
    "choose": [
      {
        "title": "可以通过sendBroadcast()发送隐式广播在应用内传递敏感信息"
      },
      {
        "title": "可以通过sendOrderedBroadcast()方法在应用内传递敏感信息"
      },
      {
        "title": "如果消息仅限于应用内，应该使用LocalBroadcastManager#sendBroadcast()发送敏感消息",
        "result": true
      },
      {
        "title": "接受敏感信息的静态BroadcastReceiver如果没有特殊原因，尽量不设置为export",
        "result": true
      }
    ]
  },
  {
    "id": 32,
    "title": "在文本大小设置中，使用以下哪种单位会使显示的字体大小会受系统设置里字体大小的影响？",
    "multi": false,
    "choose": [
      {
        "title": "dp"
      },
      {
        "title": "sp",
        "result": true
      },
      {
        "title": "px"
      },
      {
        "title": "pt"
      }
    ]
  },
  {
    "id": 33,
    "title": "以下做法错误的有哪些？",
    "multi": true,
    "choose": [
      {
        "title": "使用Textview,编写倒计时组件时，使用wrap_content设置文本大小解决适配问题",
        "result": true
      },
      {
        "title": "为避免主线程卡顿，在非UI线程绌ImageView设置背景图片",
        "result": true
      },
      {
        "title": "为解决连续显示Toast时不能取消上一次Toast消息的情况，使用一个全局的Toast对象"
      },
      {
        "title": "为共享数据，可使用Intent进行数据传输"
      }
    ]
  },
  {
    "id": 34,
    "title": "关于应用内广播做法正确的是()",
    "multi": false,
    "choose": [
      {
        "title": "使用隐式Intent启动广播"
      },
      {
        "title": "receiver组件定义属性android:exported=true"
      },
      {
        "title": "使用LocalBroadcastManager处理应用内广播",
        "result": true
      },
      {
        "title": "任何形式的广播都可以"
      }
    ]
  },
  {
    "id": 35,
    "title": "Id资源定义推荐驼峰命名法，View组件的资源id应以View的缩写作为前缀，某些特殊控件可以使用小写字母加下划线进行命名，以下id资源的命名不符合规范的是()",
    "multi": false,
    "choose": [
      {
        "title": "某个ImageView的id定义为：<ImageView id=\"@+id/ivUserAvatar\"…>...</ImageView>"
      },
      {
        "title": "某个TextView的id定义为：<TextView id=\"@+id/userNameI\"…>…</TextView>",
        "result": true
      },
      {
        "title": "某个Button的id定义为：<Button id=\"@+id/btnLogin\">…</Button>"
      },
      {
        "title": "某个ProgressBar的id定义为：<ProgressBar android:id=\"@+id/progress_bar_login\">...</ProgressBar>"
      }
    ]
  },
  {
    "id": 36,
    "title": "使用()代替RGB_888，在不怎么降低视觉效果的前提下，减少内存占用",
    "multi": false,
    "choose": [
      {
        "title": "RGB_565",
        "result": true
      },
      {
        "title": "ALPHA_8"
      },
      {
        "title": "ARGB_4444"
      },
      {
        "title": "ARGB_8888"
      }
    ]
  },
  {
    "id": 37,
    "title": "Activity间通过隐式Intent跳转时，需要注意的是（）",
    "multi": true,
    "choose": [
      {
        "title": "为了防应用之间的影响，隐式Intent中Action定义尽量更详细一些",
        "result": true
      },
      {
        "title": "为了避免找不到相应的Activity造成应用异常，在发出intent之前，必须通过resolveActivity检查",
        "result": true
      },
      {
        "title": "在隐式Intent跳转时，不需要进行resolveActivity检查，直接CatchException就可以了"
      },
      {
        "title": "调用系统功能例如拨打电话、发邮件等，需要遵守标准的URI格式",
        "result": true
      }
    ]
  },
  {
    "id": 38,
    "title": "以下说法中正确的是",
    "multi": true,
    "choose": [
      {
        "title": "密钥加密存储或者经过变形平理后用于加解密运算，切勿硬编码到代码中。",
        "result": true
      },
      {
        "title": "Webview应设置WebView#getSettings()#setAllowFileAccess(false）、WebView#getSettings()#setAllowFileAccessFromFileURLs(false）、WebView#getSettings()#setAllowUniversaIAccessFromFiIeURLs(false)，阻止fileschemeURL的访问",
        "result": true
      },
      {
        "title": "不要使用loopback来通信敏感信息",
        "result": true
      },
      {
        "title": "Android5.0以后安全性要求较高的应用应该使用window.setFlag(LayoutParam.FLAG_SECURE）禁止录屏",
        "result": true
      }
    ]
  },
  {
    "id": 39,
    "title": "关于service启动，下列说法正确的是（）",
    "multi": true,
    "choose": [
      {
        "title": "Service都应该声明IntentFilter"
      },
      {
        "title": "推荐使用隐式Intert启动Service"
      },
      {
        "title": "如果使用隐式Intent，推荐使用Intent#setPackage()方法设置Intent指定包名",
        "result": true
      },
      {
        "title": "没有特殊原因，总是使用显式Intent启动或绑定Service",
        "result": true
      }
    ]
  },
  {
    "id": 40,
    "title": "执行SQL语句时，应使用（)，以免SQL注入风险",
    "multi": true,
    "choose": [
      {
        "title": "SQLiteDatabase#insert()",
        "result": true
      },
      {
        "title": "SQLiteDatabase#update()",
        "result": true
      },
      {
        "title": "SQLiteDatabase#delete()",
        "result": true
      },
      {
        "title": "SQLiteDatabase#execSQL()"
      }
    ]
  },
  {
    "id": 41,
    "title": "通过Intent在Android基础组件之间传递大数据可能导致( )",
    "multi": false,
    "choose": [
      {
        "title": "空指针异常"
      },
      {
        "title": "OOM",
        "result": true
      },
      {
        "title": "ANR"
      },
      {
        "title": "无异常"
      }
    ]
  },
  {
    "id": 42,
    "title": "以下color资源命名不符合规范的有( )",
    "multi": true,
    "choose": [
      {
        "title": "<color name=“loadingdialogbg”>#33b5e5e5</color>",
        "result": true
      },
      {
        "title": "<color name=“live_reward_btn_bg”>#33b5e5e5</color>"
      },
      {
        "title": "<color name=“live_reward_btn_bg”>#b5e5e5</color>"
      },
      {
        "title": "<color name=“live_reward_btn_bg”>#333</color>",
        "result": true
      },
      {
        "title": "<color name=“live_reward_btn_bg”>#00333333</color>"
      }
    ]
  },
  {
    "id": 43,
    "title": "Activity#onSaveInstancestate( )方法中，适合执行的操作有 ",
    "multi": false,
    "choose": [
      {
        "title": "文件写入"
      },
      {
        "title": "更新Sqllite"
      },
      {
        "title": "保存UI控件属性",
        "result": true
      },
      {
        "title": "更新SharedPreferences"
      }
    ]
  },
  {
    "id": 44,
    "title": "某个直播业务模块名称为live，请问其Android工程中res目录下资源名称符合规范的有( )。",
    "multi": true,
    "choose": [
      {
        "title": "live_activity_main_.xml",
        "result": true
      },
      {
        "title": "popup_anim.xml"
      },
      {
        "title": "live_loading_icon.xml",
        "result": true
      },
      {
        "title": "navigation_menu.xml"
      }
    ]
  },
  {
    "id": 45,
    "title": "多进程模型的APP，应该注意哪些( )",
    "multi": true,
    "choose": [
      {
        "title": "在Application的业务初始化代码中加入进程判断，确保只在自己需要的进程初始化。特别是后台进程减少不必要的业务初始化",
        "result": true
      },
      {
        "title": "禁止在多进程之间用SharedPreferences共享数据，虽然可以(MODE_MULTI_PROCESS),但官方已不推荐",
        "result": true
      },
      {
        "title": "多进程容易导致内存不足"
      },
      {
        "title": "多进程Crash率会升高"
      }
    ]
  },
  {
    "id": 46,
    "title": "Activity间隐式Intent进行跳转时，建议先使用PackageManager#resolveActivity( )判断是能够跳转成功，是为了避免以下哪种Runtime异常？",
    "multi": false,
    "choose": [
      {
        "title": "SendIntentException"
      },
      {
        "title": "SecurityException"
      },
      {
        "title": "ActivityNotFoundException",
        "result": true
      },
      {
        "title": "NameNotFoundException"
      }
    ]
  },
  {
    "id": 47,
    "title": "当应用开发过程中需要使用BroadcastReceiver进行广播处理的时候，以下操作错误的是( )。",
    "multi": false,
    "choose": [
      {
        "title": "registerReceiver( )和unregisterReceiver( )不必成对出现",
        "result": true
      },
      {
        "title": "使用LocalBroadcastManager处理应用内广播"
      },
      {
        "title": "onReceive方法中对Intent数据做安全性校验，避免注入攻击"
      },
      {
        "title": "尽量在Activity的inResume/onPuase方法中注册和注销广播"
      }
    ]
  },
  {
    "id": 48,
    "title": "Executors返回的线程池对象有哪些弊端( )",
    "multi": true,
    "choose": [
      {
        "title": "可能会堆积大量的请求，从而导致OOM",
        "result": true
      },
      {
        "title": "可能会堆积大量的线程，从而导致OOM",
        "result": true
      },
      {
        "title": "内部有Bug，稳定性差"
      },
      {
        "title": "线程调度慢"
      }
    ]
  },
  {
    "id": 49,
    "title": "ThreadPoolExecutor设置线程存活时间(setKeepAliveTime)的目的是( )",
    "multi": false,
    "choose": [
      {
        "title": "设置的时间一到就回收线程"
      },
      {
        "title": "延长线程存活时间"
      },
      {
        "title": "确保空闲时线程能被释放",
        "result": true
      },
      {
        "title": "没有效果"
      }
    ]
  },
  {
    "id": 50,
    "title": "以下关于BroadcastReceiver#onReceive( )的说法正确的是( )",
    "multi": true,
    "choose": [
      {
        "title": "该方法可以执行IO操作"
      },
      {
        "title": "如果该方法耗时超过10s，则由可能会被系统回收",
        "result": true
      },
      {
        "title": "该方法在Main Thread执行",
        "result": true
      },
      {
        "title": "可以通过android.content.Context#Receiver(BroadcastReceiver,IntentFilter,String,android.os.Handler)方法让onReceive方法在非MainThread执行",
        "result": true
      }
    ]
  },
  {
    "id": 51,
    "title": "以下说法正确的是( )",
    "multi": true,
    "choose": [
      {
        "title": "当时有外部存储时，必须检查外部存储的可用性",
        "result": true
      },
      {
        "title": "本地加密秘钥不能硬编码在代码中，更不能使用SharedPreferences等本地持久化机制存储。应选择Android自身的秘钥库(KeyStore)机制或者其他安全性更高的安全解决方案保存",
        "result": true
      },
      {
        "title": "子线程中不能更新界面。更新界面必须在主线程中进行，网络操作不能再主线程中调用",
        "result": true
      },
      {
        "title": "应用程序在加解密时，使用硬编码在程序中的秘钥。攻击者通过反编译拿到秘钥可以轻易破解APP通信数据",
        "result": true
      }
    ]
  },
  {
    "id": 52,
    "title": "Android APP在HTTPS通信中，验证策略需要改成( )模式",
    "multi": false,
    "choose": [
      {
        "title": "SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER"
      },
      {
        "title": "SSLSocketFactory.STRICT_HOSTNAME_VERIFIER",
        "result": true
      },
      {
        "title": "SSLSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER"
      },
      {
        "title": "以上均可"
      }
    ]
  },
  {
    "id": 53,
    "title": "APK中的png图片，应该怎么处理",
    "multi": false,
    "choose": [
      {
        "title": "为了符合Google的规范，将同一张图片分别放到drawable-hdpi、drawable-xhdpi、drawable-xxhdpi等目录下"
      },
      {
        "title": "图片用TinyPNG压缩，以减小包大小",
        "result": true
      },
      {
        "title": "尽可能使用高清大图"
      },
      {
        "title": "尽可能使用原图，避免图片失真"
      }
    ]
  },
  {
    "id": 54,
    "title": "使用Intent方式启动Service时应注意( )",
    "multi": true,
    "choose": [
      {
        "title": "尽量使用显示Intent启动Service",
        "result": true
      },
      {
        "title": "Service组件避免定义Intent Filter",
        "result": true
      },
      {
        "title": "不必要外露的Service设置export=false",
        "result": true
      },
      {
        "title": "调用setPackage( )方法将Intent的解析结果限定在本应用内",
        "result": true
      }
    ]
  },
  {
    "id": 55,
    "title": "以下关于Intent中携带敏感信息的说法正确的是( )",
    "multi": true,
    "choose": [
      {
        "title": "隐式Intent中尽量不要携带敏感信息，避免被外部恶意程序注册的BroadcastReceiver劫持Intent",
        "result": true
      },
      {
        "title": "使用LocalBroadcastManager处理含敏感信息的广播，避免Intent拦截和恶意注入",
        "result": true
      },
      {
        "title": "Intent的数据内容不必关心。只要应用功能测试通过就可以"
      },
      {
        "title": "如果需要携带敏感信息。Intent需要使用显示方式。指明目标Component",
        "result": true
      },
      {
        "title": "不必要导出的组件设置android:export=false",
        "result": true
      }
    ]
  },
  {
    "id": 56,
    "title": "某个直播业务模块名称为live，当定义其布局文件( Layout)时，请问如下哪些资源文件名称不符合规范( )",
    "multi": true,
    "choose": [
      {
        "title": "live_activity_main_.xml"
      },
      {
        "title": "base_fragment_.xml",
        "result": true
      },
      {
        "title": "live_dialog_loading.xml"
      },
      {
        "title": "showaccountfragment.xml",
        "result": true
      },
      {
        "title": "live_recycle_item_homepage.xml"
      }
    ]
  },
  {
    "id": 57,
    "title": "以下关于定义一个drawable文件的说法错误的是",
    "multi": true,
    "choose": [
      {
        "title": "所有drawable文件都放在drawable目录，不区分屏幕密度",
        "result": true
      },
      {
        "title": "为不同屏幕密度的设备都提供一组drawable"
      },
      {
        "title": "为了精简apk整包大小，在满足需求并且了解清楚用户设备分布的情况的前提下，只支持几种屏幕密度的drawable、比如仅定义xhdpi中的drawable文件"
      },
      {
        "title": "在xhdpi目录下定义live_reward_btn_pressed.png"
      },
      {
        "title": "在xxxhdpi目录下放置不满足设备屏幕密度的小图",
        "result": true
      }
    ]
  },
  {
    "id": 58,
    "title": "使用gif要注意什么",
    "multi": true,
    "choose": [
      {
        "title": "和普通图片样，没有太多特殊"
      },
      {
        "title": "需要注意单个gif的大小",
        "result": true
      },
      {
        "title": "注意控制单个页面同时播放的gif个数",
        "result": true
      },
      {
        "title": "gif内存占用更大，需要注意控制内存",
        "result": true
      }
    ]
  },
  {
    "id": 59,
    "title": "以下哪些操作可以在主线程执行",
    "multi": false,
    "choose": [
      {
        "title": "更新界面",
        "result": true
      },
      {
        "title": "IO操作"
      },
      {
        "title": "网络操作"
      },
      {
        "title": "耗时逻辑"
      }
    ]
  },
  {
    "id": 60,
    "title": "在Service中进行耗时操作，说法正确的是( )",
    "multi": false,
    "choose": [
      {
        "title": "在onStartCommand( )中可以执行耗时操作"
      },
      {
        "title": "在onBind( )中可以执行耗时操作"
      },
      {
        "title": "在onCreate( )中可以执行耗时操作"
      },
      {
        "title": "在IntentService的onHandleIntent()中可以执行耗时操作",
        "result": true
      }
    ]
  },
  {
    "id": 61,
    "title": "以下哪种使用可能会造成内存问题",
    "multi": true,
    "choose": [
      {
        "title": "Application对象中存储大量缓存数据",
        "result": true
      },
      {
        "title": "使用AnimationDrawable加载大量图片",
        "result": true
      },
      {
        "title": "使用Adapter时，使用了ViewHolder做缓存"
      },
      {
        "title": "在布局设计时，不能使用Scrollview包裹ListView/GridView/ExpandableListView"
      }
    ]
  },
  {
    "id": 62,
    "title": "关于Service启动，下列说法正确的是( )",
    "multi": true,
    "choose": [
      {
        "title": "Service都应该声明IntentFilter"
      },
      {
        "title": "推荐使用隐式Intent启动Service"
      },
      {
        "title": "如果使用隐式Intent，推荐使用Intent#setPackage( )方法设置Intent指定包名",
        "result": true
      },
      {
        "title": "没有特殊原因，总是使用显示Intent启动或绑定Service",
        "result": true
      }
    ]
  },
  {
    "id": 63,
    "title": "在Activity未初始化完成时，显示PopupWindow或者Dialog会导致如下哪种异常？",
    "multi": false,
    "choose": [
      {
        "title": "InflateException"
      },
      {
        "title": "lllegaStateException"
      },
      {
        "title": "BadTokenException",
        "result": true
      },
      {
        "title": "UnsupportedOperationException"
      }
    ]
  }
]